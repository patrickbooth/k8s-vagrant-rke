---
# tasks file for kubernetes

#
# configure node for kubernetes
- name: Unmount swapfile
  ansible.posix.mount: 
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
- name: Disable swap
  ansible.builtin.command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Add br_netfilter kernel module
  community.general.modprobe:
    name: br_netfilter
    state: present
- name: Add overlay kernel module
  community.general.modprobe:
    name: overlay
    state: present
- name: Configure k8s for system modules
  ansible.builtin.copy:
    content: |
      br_netfilter
      overlay
    dest: /etc/modules-load.d/k8s.conf

- name: Fix net.bridge.bridge-nf-call-iptables issue
  ansible.builtin.copy:
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
    dest: /etc/sysctl.d/k8s.conf
  register: fix
- name: Update kernel params
  ansible.builtin.command: sysctl --system
  when: fix

- name: Set SELinux to permissive mode
  ansible.posix.selinux:
    policy: targeted
    state: permissive

#
# Configure firewalld
- name: Configure firewall
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  notify:
    - Reload Firewalld # Call the handler
  loop: 
    - 53/tcp # DNS
    - 53/udp # DNS
    - 80/tcp # HTTP
    - 179/tcp # calico networking (BGP)
    - 443/tcp # HTTPS
    - 472/udp # Flannel
    - 2376/tcp # Rancher
    - 2379-2380/tcp #etcd server client api
    - 4789/udp #calico networking with VXLAN enabled
    - 6443/tcp # k8s api server
    - 8472/udp # etcd
    - 9099/udp # etcd
    - 9153/tcp # DNS
    - 10250-10251/tcp # kubelet api
    - 10257/tcp # kube controller manager
    - 10259/tcp # kube scheduler
    - 30000-32767/tcp # NodePort services
    - 30000-32767/udp # NodePort services
- ansible.posix.firewalld:
    masquerade: true
    state: enabled
    permanent: true
    zone: public
  notify:
    - Reload Firewalld # Call the handler

#
# install packages
- name: Install dnf-utils
  ansible.builtin.dnf:
    name:
      - dnf-utils
    state: latest
- name: Add docker repo
  ansible.builtin.command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
- name: Install packages
  ansible.builtin.dnf:
    name:
      - docker-ce-3:24* # latest supported RKE version
      - docker-ce-cli
      - containerd.io
      - wget
    state: latest
  retries: 3
  delay: 3

- name: Start & enable docker
  ansible.builtin.service:
    name: docker
    enabled: true
    state: started
- name: Enable containerd
  ansible.builtin.service:
    name: containerd
    enabled: true

- name: Add the vagrant user to docker group
  ansible.builtin.user:
    name: vagrant
    state: present
    groups: docker

#
# configure containerd
# this command has been written as a shell script as using ansible's .command function did not yield positive results
- name: Configure containerd to use SystemdCgroup
  ansible.builtin.shell: | 
    containerd config default > /etc/containerd/config.toml
    sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
    systemctl restart containerd
  args:
    executable: /bin/bash

#
# install kubernetes
# Restart docker on workers
# This fixes an issue with RKE installation failing due to a iptables issue on the workernodes.
- name: Restart docker on workers
  delegate_to: "{{ item }}"
  ansible.builtin.service:
    name: docker
    state: restarted
  loop:
    - workernode1
    - workernode2
  
- name: Download rke binary
  ansible.builtin.command: wget https://github.com/rancher/rke/releases/download/v1.5.5/rke_linux-amd64
  retries: 3 # wget can sometimes fail
  delay: 3
- name: Rename rke binary
  ansible.builtin.command: mv /home/vagrant/rke_linux-amd64 /home/vagrant/rke
- name: Change rke binary permissions
  ansible.builtin.file:
    path: /home/vagrant/rke
    owner: vagrant
    group: vagrant
    mode: '0700'

- name: Set cluster.yml
  ansible.builtin.template:
    src: "templates/cluster.yml.j2"
    dest: "/home/vagrant/cluster.yml"

- name: Install kubernetes
  ansible.builtin.command: /home/vagrant/rke up

- name: Change kube config file permissions
  ansible.builtin.file:
    path: /home/vagrant/kube_config_cluster.yml
    owner: vagrant
    group: vagrant
    mode: '0644'

# transfer kubeconfig to ansible host
- name: Fetch kube config from controlplane
  ansible.builtin.fetch:
    src: /home/vagrant/kube_config_cluster.yml
    dest: /home/vagrant/.kube/config
    flat: yes # remove hostname file tree
- name: Secure local kube conf
  delegate_to: localhost
  ansible.builtin.command: chmod 600 /home/vagrant/.kube/config

# Boot strap cluster
# - name: Install calico operator into cluster
#   become: true
#   become_user: vagrant
#   delegate_to: localhost
#   ansible.builtin.command: /usr/local/bin/kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.2/manifests/tigera-operator.yaml
# - name: Install calico custom resources
#   become: true
#   become_user: vagrant
#   delegate_to: localhost
#   ansible.builtin.command: /usr/local/bin/kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.2/manifests/custom-resources.yaml
